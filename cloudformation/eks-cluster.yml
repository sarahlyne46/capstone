Description: >
    Sarah Lyne / Udacity Capstone Project / AWS Cloud DevOps Course

    Original yml code taken from my Udacity Project 2.
    
    This template deploys security groups, load balancers, listeners, autoscaling, Ubuntu servers for code, iam users.          
Parameters:

    EnvironmentName:
        Description: An environment name that will be prefixed to resource names
        Type: String
        Default: capstone-project

Resources:
              
    EKSSecurityGroup:
        Type: AWS::EC2::SecurityGroup
        Properties:
            GroupDescription: Allow http to our load balancer
            VpcId:
                Fn::ImportValue:
                    !Sub "${EnvironmentName}-VPCID"
            SecurityGroupIngress:
            - IpProtocol: tcp
              FromPort: 80
              ToPort: 80
              CidrIp: 0.0.0.0/0
            SecurityGroupEgress:
            - IpProtocol: tcp
              FromPort: 80
              ToPort: 80
              CidrIp: 0.0.0.0/0
            Tags: 
                - Key: Name 
                  Value: !Sub ${EnvironmentName} CapstoneSecGroup


    ClusterInstanceProfile:
        Type: AWS::IAM::InstanceProfile
        Properties:
            Path: "/"
            Roles:
            - Ref: EKSRole

    EKSRole:
        Type: AWS::IAM::Role
        Properties:
            AssumeRolePolicyDocument:
                Version: '2012-10-17'
                Statement:
                - Effect: Allow
                  Principal:
                    Service:
                    - eks.amazonaws.com
                  Action:
                  - sts:AssumeRole
            Path: "/"
            ManagedPolicyArns:
              - arn:aws:iam::aws:policy/AmazonEKSClusterPolicy
              - arn:aws:iam::aws:policy/AmazonEKSServicePolicy
              - arn:aws:iam::aws:policy/ElasticLoadBalancingFullAccess
            Tags:
            - Key: Name
              Value: !Sub ${EnvironmentName}-EKSRole

    EKSCluster:
        Type: AWS::EKS::Cluster
        Properties:
          Version: "1.19"
          Name: !Sub ${EnvironmentName}-cluster
          RoleArn: !GetAtt EKSRole.Arn
          ResourcesVpcConfig:
            SecurityGroupIds:
              - Fn::ImportValue: !Sub ${EnvironmentName}-SCG
            SubnetIds:
              Fn::ImportValue: ${EnvironmentName}-PUB-NETS

Outputs:
    EksId:
        Description: EKS id
        Value: !Ref CapstoneProjectCluster
        Export:
            Name: !Sub ${EnvironmentName}-EKSCluster

    EKSRoleArn:
        Description: Role for accessing and creating aws resources
        Value: !GetAtt EKSClusterRole.Arn
        Export:
            Name: !Sub ${EnvironmentName}-EKSRole                  