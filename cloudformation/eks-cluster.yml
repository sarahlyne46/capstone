Description: >
    Sarah Lyne / Udacity Capstone Project / AWS Cloud DevOps Course

    Original yml code taken from my Udacity Project 2.
    
    This template deploys security groups, load balancers, listeners, autoscaling, Ubuntu servers for code, iam users.          
Parameters:

    EnvironmentName:
        Description: An environment name that will be prefixed to resource names
        Type: String
        Default: capstone-test2211
      
    KeyPairName:
        Description: The EC2 Key Pair to allow SSH access to the instances
        Default: capstone
        Type: AWS::EC2::KeyPair::KeyName    

Resources:

    ClusterInstanceProfile:
        Type: AWS::IAM::InstanceProfile
        Properties:
            InstanceProfileName: !Sub ${EnvironmentName}-cluster-profile
            Path: "/"
            Roles:
              - !Ref eksClusterRole

    eksClusterRole:
        Type: AWS::IAM::Role
        Properties:
            AssumeRolePolicyDocument:
                Version: '2012-10-17'
                Statement:
                  - Effect: Allow
                    Principal:
                      Service:
                        - eks.amazonaws.com
                    Action:
                      - sts:AssumeRole
            Path: "/"
            ManagedPolicyArns:
              - arn:aws:iam::aws:policy/AmazonEC2FullAccess
              - arn:aws:iam::aws:policy/AmazonEKSClusterPolicy
              - arn:aws:iam::aws:policy/AmazonEKSServicePolicy
              - arn:aws:iam::aws:policy/ElasticLoadBalancingFullAccess
              - arn:aws:iam::aws:policy/AmazonEKS_CNI_Policy
            Tags:
            - Key: Name
              Value: !Sub ${EnvironmentName}-eksClusterRole

    EKSCluster:
        Type: AWS::EKS::Cluster
        Properties:
          Version: "1.21"
          Name: !Sub ${EnvironmentName}-cluster
          RoleArn: !GetAtt eksClusterRole.Arn
          ResourcesVpcConfig:
            SecurityGroupIds:
              - Fn::ImportValue: !Sub ${EnvironmentName}-SecGroup
            SubnetIds:
              Fn::Split:
                - ","
                - Fn::ImportValue:
                    Fn::Sub: ${EnvironmentName}-PUB-NETS
          Tags:
          - Key: Name
            Value: !Sub ${EnvironmentName}-EKSCluster
Outputs:
    EksId:
        Description: EKS id
        Value: !Ref EKSCluster
        Export:
            Name: !Sub ${EnvironmentName}-EKSCluster

    eksClusterRoleArn:
        Description: Role for accessing and creating aws resources
        Value: !GetAtt eksClusterRole.Arn
        Export:
            Name: !Sub ${EnvironmentName}-eksClusterRole           
